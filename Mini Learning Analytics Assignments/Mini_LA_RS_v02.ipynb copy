{
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "#Mini LA Assignment 3 - Recommendation System\n",
        "#### **Authors**: Yutong Shen, Jingfei Chen, Yiran Wang"
      ],
      "metadata": {
        "id": "IU6pfFfyVStV"
      },
      "id": "IU6pfFfyVStV"
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Tasks:**\n",
        "\n",
        "- The design plan of your recommender system (i.e., data source, algorithm(s)/rules, evaluation plan)\n",
        "\n",
        "- Reproducible code for your algorithms\n",
        "\n",
        "- Demonstrate the two types of recommendations: (a) a hypothetical brand-new learner (with background info) and (b) a hypothetical returning learner (with background info and some learning history)\n",
        "\n",
        "- A brief discussion on your plan (e.g., pros/cons, what extra data is needed, challenges)"
      ],
      "metadata": {
        "id": "d1TOJc9hXcTf"
      },
      "id": "d1TOJc9hXcTf"
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Background:**\n",
        "\n",
        "As the amount of educational data available to us has grown, the task of organizing and making use of it has become more daunting. Duval (2011) saw recommender systems as a way to deal with the “paradox of choice”, the dilemma of determining what information to feed back to learners about their learning. An idealized recommender system provides a limited number of suggested metrics or new content based on the learner’s past behavior and the patterns of all other learners in the sample. Recommender systems may provide behavioral cues, new content, insights or suggested behavioral changes based on a comparison of the learner to all other learners in the system."
      ],
      "metadata": {
        "id": "BlN78f343LT6"
      },
      "id": "BlN78f343LT6"
    },
    {
      "cell_type": "markdown",
      "source": [
        "**DataSets:**\n",
        "\n",
        "1. studentRegistration.csv\n",
        "\n",
        "\n",
        "- code_module: Course name, for which student registered\n",
        "- code_presentation: Semester name, for which student registered\n",
        "- id_student: Unique student identifier, connects to dataset student\n",
        "- date_registration: Date of student registration to course in days from official start. It can be negative - student registered before course started.\n",
        "- date_unregistration: Date of student deregistered from course in days from official start. It can be negative - student deregistered before course started. NA value means that student finished course.\n",
        "\n",
        "2. studentInfo.csv.\n",
        "\n",
        "- code_module: Name of course, for which student registered\n",
        "- code_presentation: Name of semester, for which student registered\n",
        "- id_student: Unique integer identifiing each student\n",
        "- gender: Students gender\n",
        "- region: UK region, in which student lives\n",
        "- highest_education: Highest education student achieved before taking course\n",
        "- imd_band: Index of Multiple Deprivation (see https://www.gov.uk/government/statistics/english-indices-of-deprivation-2015) percentile, students with imd_band lower than 20 comes from the most deprived regions\n",
        "- age_band: Age band of student\n",
        "- num_of_prev_attempts: Number of student previous attempts on the selected course\n",
        "- studied_credits: Total credits student is studiing at the Open University during period of the course\n",
        "- disability: Student claims disability of any type, logical\n",
        "- final_result: Student final result in the course\n"
      ],
      "metadata": {
        "id": "4ojkLwZE3iH1"
      },
      "id": "4ojkLwZE3iH1"
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Problem & Purpose:**\n",
        "\n",
        "Designing and creating a recommender system for an online learning system with limited number of learning modules. This recommender system will suggest which module(s) a person should register.\n",
        "\n",
        "The recommender system will be able to:\n",
        "- (a) make a reasonable suggestion to a brand new learner (with or without background information), and\n",
        "- (b) make a reasonable suggestion to a learner based on the prior history."
      ],
      "metadata": {
        "id": "syS7hZqJVvmh"
      },
      "id": "syS7hZqJVvmh"
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 1. Import Datasets"
      ],
      "metadata": {
        "id": "fqYaarlFZ4HU"
      },
      "id": "fqYaarlFZ4HU"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "4aeb6ec1",
      "metadata": {
        "id": "4aeb6ec1"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "bf7f2c47",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "bf7f2c47",
        "outputId": "edb979ac-5f38-4e3e-f45e-ec42e185f133"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  code_module code_presentation  id_student gender                region  \\\n",
              "0         AAA             2013J       11391      M   East Anglian Region   \n",
              "1         AAA             2013J       28400      F              Scotland   \n",
              "2         AAA             2013J       30268      F  North Western Region   \n",
              "3         AAA             2013J       31604      F     South East Region   \n",
              "4         AAA             2013J       32885      F  West Midlands Region   \n",
              "\n",
              "       highest_education imd_band age_band  num_of_prev_attempts  \\\n",
              "0       HE Qualification  90-100%     55<=                     0   \n",
              "1       HE Qualification   20-30%    35-55                     0   \n",
              "2  A Level or Equivalent   30-40%    35-55                     0   \n",
              "3  A Level or Equivalent   50-60%    35-55                     0   \n",
              "4     Lower Than A Level   50-60%     0-35                     0   \n",
              "\n",
              "   studied_credits disability final_result  \n",
              "0              240          N         Pass  \n",
              "1               60          N         Pass  \n",
              "2               60          Y    Withdrawn  \n",
              "3               60          N         Pass  \n",
              "4               60          N         Pass  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a8d7f60f-c985-463f-b35f-39ece6cb3899\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>code_module</th>\n",
              "      <th>code_presentation</th>\n",
              "      <th>id_student</th>\n",
              "      <th>gender</th>\n",
              "      <th>region</th>\n",
              "      <th>highest_education</th>\n",
              "      <th>imd_band</th>\n",
              "      <th>age_band</th>\n",
              "      <th>num_of_prev_attempts</th>\n",
              "      <th>studied_credits</th>\n",
              "      <th>disability</th>\n",
              "      <th>final_result</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>11391</td>\n",
              "      <td>M</td>\n",
              "      <td>East Anglian Region</td>\n",
              "      <td>HE Qualification</td>\n",
              "      <td>90-100%</td>\n",
              "      <td>55&lt;=</td>\n",
              "      <td>0</td>\n",
              "      <td>240</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>28400</td>\n",
              "      <td>F</td>\n",
              "      <td>Scotland</td>\n",
              "      <td>HE Qualification</td>\n",
              "      <td>20-30%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>30268</td>\n",
              "      <td>F</td>\n",
              "      <td>North Western Region</td>\n",
              "      <td>A Level or Equivalent</td>\n",
              "      <td>30-40%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>Y</td>\n",
              "      <td>Withdrawn</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>31604</td>\n",
              "      <td>F</td>\n",
              "      <td>South East Region</td>\n",
              "      <td>A Level or Equivalent</td>\n",
              "      <td>50-60%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>32885</td>\n",
              "      <td>F</td>\n",
              "      <td>West Midlands Region</td>\n",
              "      <td>Lower Than A Level</td>\n",
              "      <td>50-60%</td>\n",
              "      <td>0-35</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a8d7f60f-c985-463f-b35f-39ece6cb3899')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a8d7f60f-c985-463f-b35f-39ece6cb3899 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a8d7f60f-c985-463f-b35f-39ece6cb3899');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 2
        }
      ],
      "source": [
        "info = pd.read_csv('studentInfo.csv')\n",
        "info.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "129c618e",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "129c618e",
        "outputId": "76f2b5ff-3461-4bb1-975c-7570d316355f"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  code_module code_presentation  id_student  date_registration  \\\n",
              "0         AAA             2013J       11391             -159.0   \n",
              "1         AAA             2013J       28400              -53.0   \n",
              "2         AAA             2013J       30268              -92.0   \n",
              "3         AAA             2013J       31604              -52.0   \n",
              "4         AAA             2013J       32885             -176.0   \n",
              "\n",
              "   date_unregistration  \n",
              "0                  NaN  \n",
              "1                  NaN  \n",
              "2                 12.0  \n",
              "3                  NaN  \n",
              "4                  NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b554a91c-bea3-4a8a-b12f-d0d13f479be4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>code_module</th>\n",
              "      <th>code_presentation</th>\n",
              "      <th>id_student</th>\n",
              "      <th>date_registration</th>\n",
              "      <th>date_unregistration</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>11391</td>\n",
              "      <td>-159.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>28400</td>\n",
              "      <td>-53.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>30268</td>\n",
              "      <td>-92.0</td>\n",
              "      <td>12.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>31604</td>\n",
              "      <td>-52.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>32885</td>\n",
              "      <td>-176.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b554a91c-bea3-4a8a-b12f-d0d13f479be4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b554a91c-bea3-4a8a-b12f-d0d13f479be4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b554a91c-bea3-4a8a-b12f-d0d13f479be4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ],
      "source": [
        "registration = pd.read_csv('studentRegistration.csv')\n",
        "registration.head()"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 2. Data Processing"
      ],
      "metadata": {
        "id": "ULySSzS4aBqY"
      },
      "id": "ULySSzS4aBqY"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "1a329559",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "1a329559",
        "outputId": "3194d351-aca5-4520-85ab-310cc809a795"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  code_module code_presentation  id_student gender                region  \\\n",
              "0         AAA             2013J       11391      M   East Anglian Region   \n",
              "1         AAA             2013J       28400      F              Scotland   \n",
              "2         AAA             2013J       30268      F  North Western Region   \n",
              "3         AAA             2013J       31604      F     South East Region   \n",
              "4         AAA             2013J       32885      F  West Midlands Region   \n",
              "\n",
              "       highest_education imd_band age_band  num_of_prev_attempts  \\\n",
              "0       HE Qualification  90-100%     55<=                     0   \n",
              "1       HE Qualification   20-30%    35-55                     0   \n",
              "2  A Level or Equivalent   30-40%    35-55                     0   \n",
              "3  A Level or Equivalent   50-60%    35-55                     0   \n",
              "4     Lower Than A Level   50-60%     0-35                     0   \n",
              "\n",
              "   studied_credits disability final_result  date_registration  \\\n",
              "0              240          N         Pass             -159.0   \n",
              "1               60          N         Pass              -53.0   \n",
              "2               60          Y    Withdrawn              -92.0   \n",
              "3               60          N         Pass              -52.0   \n",
              "4               60          N         Pass             -176.0   \n",
              "\n",
              "   date_unregistration  \n",
              "0                  NaN  \n",
              "1                  NaN  \n",
              "2                 12.0  \n",
              "3                  NaN  \n",
              "4                  NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5d2fa59c-b297-4b56-b670-37e33d318773\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>code_module</th>\n",
              "      <th>code_presentation</th>\n",
              "      <th>id_student</th>\n",
              "      <th>gender</th>\n",
              "      <th>region</th>\n",
              "      <th>highest_education</th>\n",
              "      <th>imd_band</th>\n",
              "      <th>age_band</th>\n",
              "      <th>num_of_prev_attempts</th>\n",
              "      <th>studied_credits</th>\n",
              "      <th>disability</th>\n",
              "      <th>final_result</th>\n",
              "      <th>date_registration</th>\n",
              "      <th>date_unregistration</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>11391</td>\n",
              "      <td>M</td>\n",
              "      <td>East Anglian Region</td>\n",
              "      <td>HE Qualification</td>\n",
              "      <td>90-100%</td>\n",
              "      <td>55&lt;=</td>\n",
              "      <td>0</td>\n",
              "      <td>240</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-159.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>28400</td>\n",
              "      <td>F</td>\n",
              "      <td>Scotland</td>\n",
              "      <td>HE Qualification</td>\n",
              "      <td>20-30%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-53.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>30268</td>\n",
              "      <td>F</td>\n",
              "      <td>North Western Region</td>\n",
              "      <td>A Level or Equivalent</td>\n",
              "      <td>30-40%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>Y</td>\n",
              "      <td>Withdrawn</td>\n",
              "      <td>-92.0</td>\n",
              "      <td>12.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>31604</td>\n",
              "      <td>F</td>\n",
              "      <td>South East Region</td>\n",
              "      <td>A Level or Equivalent</td>\n",
              "      <td>50-60%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-52.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>32885</td>\n",
              "      <td>F</td>\n",
              "      <td>West Midlands Region</td>\n",
              "      <td>Lower Than A Level</td>\n",
              "      <td>50-60%</td>\n",
              "      <td>0-35</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-176.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5d2fa59c-b297-4b56-b670-37e33d318773')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-5d2fa59c-b297-4b56-b670-37e33d318773 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-5d2fa59c-b297-4b56-b670-37e33d318773');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ],
      "source": [
        "# merge the two datasets\n",
        "student = info.merge(registration, how='left', on=['code_module', 'code_presentation', 'id_student'])\n",
        "student.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "47c35880",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "47c35880",
        "outputId": "6f51be3e-11df-45c5-eab6-0c8361a25167"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         id_student  num_of_prev_attempts  studied_credits  date_registration  \\\n",
              "count  3.259300e+04          32593.000000     32593.000000       32548.000000   \n",
              "mean   7.066877e+05              0.163225        79.758691         -69.411300   \n",
              "std    5.491673e+05              0.479758        41.071900          49.260522   \n",
              "min    3.733000e+03              0.000000        30.000000        -322.000000   \n",
              "25%    5.085730e+05              0.000000        60.000000        -100.000000   \n",
              "50%    5.903100e+05              0.000000        60.000000         -57.000000   \n",
              "75%    6.444530e+05              0.000000       120.000000         -29.000000   \n",
              "max    2.716795e+06              6.000000       655.000000         167.000000   \n",
              "\n",
              "       date_unregistration  \n",
              "count         10072.000000  \n",
              "mean             49.757645  \n",
              "std              82.460890  \n",
              "min            -365.000000  \n",
              "25%              -2.000000  \n",
              "50%              27.000000  \n",
              "75%             109.000000  \n",
              "max             444.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-458a9963-db00-4f88-874f-515ca14a086a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id_student</th>\n",
              "      <th>num_of_prev_attempts</th>\n",
              "      <th>studied_credits</th>\n",
              "      <th>date_registration</th>\n",
              "      <th>date_unregistration</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>3.259300e+04</td>\n",
              "      <td>32593.000000</td>\n",
              "      <td>32593.000000</td>\n",
              "      <td>32548.000000</td>\n",
              "      <td>10072.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>7.066877e+05</td>\n",
              "      <td>0.163225</td>\n",
              "      <td>79.758691</td>\n",
              "      <td>-69.411300</td>\n",
              "      <td>49.757645</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>5.491673e+05</td>\n",
              "      <td>0.479758</td>\n",
              "      <td>41.071900</td>\n",
              "      <td>49.260522</td>\n",
              "      <td>82.460890</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>3.733000e+03</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>30.000000</td>\n",
              "      <td>-322.000000</td>\n",
              "      <td>-365.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>5.085730e+05</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>60.000000</td>\n",
              "      <td>-100.000000</td>\n",
              "      <td>-2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>5.903100e+05</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>60.000000</td>\n",
              "      <td>-57.000000</td>\n",
              "      <td>27.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>6.444530e+05</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>120.000000</td>\n",
              "      <td>-29.000000</td>\n",
              "      <td>109.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>2.716795e+06</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>655.000000</td>\n",
              "      <td>167.000000</td>\n",
              "      <td>444.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-458a9963-db00-4f88-874f-515ca14a086a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-458a9963-db00-4f88-874f-515ca14a086a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-458a9963-db00-4f88-874f-515ca14a086a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ],
      "source": [
        "# show summary statistics\n",
        "student.describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "3bd18ac3",
      "metadata": {
        "scrolled": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3bd18ac3",
        "outputId": "bf120900-27ef-46b9-af96-8bfb6a8aaf2b"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "code_module                 0\n",
              "code_presentation           0\n",
              "id_student                  0\n",
              "gender                      0\n",
              "region                      0\n",
              "highest_education           0\n",
              "imd_band                 1111\n",
              "age_band                    0\n",
              "num_of_prev_attempts        0\n",
              "studied_credits             0\n",
              "disability                  0\n",
              "final_result                0\n",
              "date_registration          45\n",
              "date_unregistration     22521\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ],
      "source": [
        "# check for missing values\n",
        "student.isnull().sum()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "7b4ed75e",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "7b4ed75e",
        "outputId": "9a6747ec-caea-4b13-865d-5bceb590f546"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  code_module code_presentation  id_student gender                region  \\\n",
              "0         AAA             2013J       11391      M   East Anglian Region   \n",
              "1         AAA             2013J       28400      F              Scotland   \n",
              "3         AAA             2013J       31604      F     South East Region   \n",
              "4         AAA             2013J       32885      F  West Midlands Region   \n",
              "5         AAA             2013J       38053      M                 Wales   \n",
              "\n",
              "       highest_education imd_band age_band  num_of_prev_attempts  \\\n",
              "0       HE Qualification  90-100%     55<=                     0   \n",
              "1       HE Qualification   20-30%    35-55                     0   \n",
              "3  A Level or Equivalent   50-60%    35-55                     0   \n",
              "4     Lower Than A Level   50-60%     0-35                     0   \n",
              "5  A Level or Equivalent   80-90%    35-55                     0   \n",
              "\n",
              "   studied_credits disability final_result  date_registration  \\\n",
              "0              240          N         Pass             -159.0   \n",
              "1               60          N         Pass              -53.0   \n",
              "3               60          N         Pass              -52.0   \n",
              "4               60          N         Pass             -176.0   \n",
              "5               60          N         Pass             -110.0   \n",
              "\n",
              "   date_unregistration  \n",
              "0                  NaN  \n",
              "1                  NaN  \n",
              "3                  NaN  \n",
              "4                  NaN  \n",
              "5                  NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9e98e2a8-dcb6-46c2-b715-9c679d82ded1\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>code_module</th>\n",
              "      <th>code_presentation</th>\n",
              "      <th>id_student</th>\n",
              "      <th>gender</th>\n",
              "      <th>region</th>\n",
              "      <th>highest_education</th>\n",
              "      <th>imd_band</th>\n",
              "      <th>age_band</th>\n",
              "      <th>num_of_prev_attempts</th>\n",
              "      <th>studied_credits</th>\n",
              "      <th>disability</th>\n",
              "      <th>final_result</th>\n",
              "      <th>date_registration</th>\n",
              "      <th>date_unregistration</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>11391</td>\n",
              "      <td>M</td>\n",
              "      <td>East Anglian Region</td>\n",
              "      <td>HE Qualification</td>\n",
              "      <td>90-100%</td>\n",
              "      <td>55&lt;=</td>\n",
              "      <td>0</td>\n",
              "      <td>240</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-159.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>28400</td>\n",
              "      <td>F</td>\n",
              "      <td>Scotland</td>\n",
              "      <td>HE Qualification</td>\n",
              "      <td>20-30%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-53.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>31604</td>\n",
              "      <td>F</td>\n",
              "      <td>South East Region</td>\n",
              "      <td>A Level or Equivalent</td>\n",
              "      <td>50-60%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-52.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>32885</td>\n",
              "      <td>F</td>\n",
              "      <td>West Midlands Region</td>\n",
              "      <td>Lower Than A Level</td>\n",
              "      <td>50-60%</td>\n",
              "      <td>0-35</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-176.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>38053</td>\n",
              "      <td>M</td>\n",
              "      <td>Wales</td>\n",
              "      <td>A Level or Equivalent</td>\n",
              "      <td>80-90%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-110.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9e98e2a8-dcb6-46c2-b715-9c679d82ded1')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9e98e2a8-dcb6-46c2-b715-9c679d82ded1 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9e98e2a8-dcb6-46c2-b715-9c679d82ded1');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ],
      "source": [
        "student[student.isnull().any(axis=1)].head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "2e5a794d",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "2e5a794d",
        "outputId": "9f024bdd-bb29-47e2-e94e-616521822b05"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      code_module code_presentation  id_student gender                region  \\\n",
              "0             AAA             2013J       11391      M   East Anglian Region   \n",
              "1             AAA             2013J       28400      F              Scotland   \n",
              "2             AAA             2013J       30268      F  North Western Region   \n",
              "3             AAA             2013J       31604      F     South East Region   \n",
              "4             AAA             2013J       32885      F  West Midlands Region   \n",
              "...           ...               ...         ...    ...                   ...   \n",
              "32588         GGG             2014J     2640965      F                 Wales   \n",
              "32589         GGG             2014J     2645731      F   East Anglian Region   \n",
              "32590         GGG             2014J     2648187      F          South Region   \n",
              "32591         GGG             2014J     2679821      F     South East Region   \n",
              "32592         GGG             2014J     2684003      F      Yorkshire Region   \n",
              "\n",
              "           highest_education imd_band age_band  num_of_prev_attempts  \\\n",
              "0           HE Qualification  90-100%     55<=                     0   \n",
              "1           HE Qualification   20-30%    35-55                     0   \n",
              "2      A Level or Equivalent   30-40%    35-55                     0   \n",
              "3      A Level or Equivalent   50-60%    35-55                     0   \n",
              "4         Lower Than A Level   50-60%     0-35                     0   \n",
              "...                      ...      ...      ...                   ...   \n",
              "32588     Lower Than A Level    10-20     0-35                     0   \n",
              "32589     Lower Than A Level   40-50%    35-55                     0   \n",
              "32590  A Level or Equivalent   20-30%     0-35                     0   \n",
              "32591     Lower Than A Level  90-100%    35-55                     0   \n",
              "32592       HE Qualification   50-60%    35-55                     0   \n",
              "\n",
              "       studied_credits disability final_result  date_registration  \\\n",
              "0                  240          N         Pass             -159.0   \n",
              "1                   60          N         Pass              -53.0   \n",
              "2                   60          Y    Withdrawn              -92.0   \n",
              "3                   60          N         Pass              -52.0   \n",
              "4                   60          N         Pass             -176.0   \n",
              "...                ...        ...          ...                ...   \n",
              "32588               30          N         Fail               -4.0   \n",
              "32589               30          N  Distinction              -23.0   \n",
              "32590               30          Y         Pass             -129.0   \n",
              "32591               30          N    Withdrawn              -49.0   \n",
              "32592               30          N  Distinction              -28.0   \n",
              "\n",
              "       date_unregistration  \n",
              "0                  10000.0  \n",
              "1                  10000.0  \n",
              "2                     12.0  \n",
              "3                  10000.0  \n",
              "4                  10000.0  \n",
              "...                    ...  \n",
              "32588              10000.0  \n",
              "32589              10000.0  \n",
              "32590              10000.0  \n",
              "32591                101.0  \n",
              "32592              10000.0  \n",
              "\n",
              "[32593 rows x 14 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cb358456-0374-47aa-af82-771f2683e976\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>code_module</th>\n",
              "      <th>code_presentation</th>\n",
              "      <th>id_student</th>\n",
              "      <th>gender</th>\n",
              "      <th>region</th>\n",
              "      <th>highest_education</th>\n",
              "      <th>imd_band</th>\n",
              "      <th>age_band</th>\n",
              "      <th>num_of_prev_attempts</th>\n",
              "      <th>studied_credits</th>\n",
              "      <th>disability</th>\n",
              "      <th>final_result</th>\n",
              "      <th>date_registration</th>\n",
              "      <th>date_unregistration</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>11391</td>\n",
              "      <td>M</td>\n",
              "      <td>East Anglian Region</td>\n",
              "      <td>HE Qualification</td>\n",
              "      <td>90-100%</td>\n",
              "      <td>55&lt;=</td>\n",
              "      <td>0</td>\n",
              "      <td>240</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-159.0</td>\n",
              "      <td>10000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>28400</td>\n",
              "      <td>F</td>\n",
              "      <td>Scotland</td>\n",
              "      <td>HE Qualification</td>\n",
              "      <td>20-30%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-53.0</td>\n",
              "      <td>10000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>30268</td>\n",
              "      <td>F</td>\n",
              "      <td>North Western Region</td>\n",
              "      <td>A Level or Equivalent</td>\n",
              "      <td>30-40%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>Y</td>\n",
              "      <td>Withdrawn</td>\n",
              "      <td>-92.0</td>\n",
              "      <td>12.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>31604</td>\n",
              "      <td>F</td>\n",
              "      <td>South East Region</td>\n",
              "      <td>A Level or Equivalent</td>\n",
              "      <td>50-60%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-52.0</td>\n",
              "      <td>10000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>32885</td>\n",
              "      <td>F</td>\n",
              "      <td>West Midlands Region</td>\n",
              "      <td>Lower Than A Level</td>\n",
              "      <td>50-60%</td>\n",
              "      <td>0-35</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-176.0</td>\n",
              "      <td>10000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32588</th>\n",
              "      <td>GGG</td>\n",
              "      <td>2014J</td>\n",
              "      <td>2640965</td>\n",
              "      <td>F</td>\n",
              "      <td>Wales</td>\n",
              "      <td>Lower Than A Level</td>\n",
              "      <td>10-20</td>\n",
              "      <td>0-35</td>\n",
              "      <td>0</td>\n",
              "      <td>30</td>\n",
              "      <td>N</td>\n",
              "      <td>Fail</td>\n",
              "      <td>-4.0</td>\n",
              "      <td>10000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32589</th>\n",
              "      <td>GGG</td>\n",
              "      <td>2014J</td>\n",
              "      <td>2645731</td>\n",
              "      <td>F</td>\n",
              "      <td>East Anglian Region</td>\n",
              "      <td>Lower Than A Level</td>\n",
              "      <td>40-50%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>30</td>\n",
              "      <td>N</td>\n",
              "      <td>Distinction</td>\n",
              "      <td>-23.0</td>\n",
              "      <td>10000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32590</th>\n",
              "      <td>GGG</td>\n",
              "      <td>2014J</td>\n",
              "      <td>2648187</td>\n",
              "      <td>F</td>\n",
              "      <td>South Region</td>\n",
              "      <td>A Level or Equivalent</td>\n",
              "      <td>20-30%</td>\n",
              "      <td>0-35</td>\n",
              "      <td>0</td>\n",
              "      <td>30</td>\n",
              "      <td>Y</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-129.0</td>\n",
              "      <td>10000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32591</th>\n",
              "      <td>GGG</td>\n",
              "      <td>2014J</td>\n",
              "      <td>2679821</td>\n",
              "      <td>F</td>\n",
              "      <td>South East Region</td>\n",
              "      <td>Lower Than A Level</td>\n",
              "      <td>90-100%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>30</td>\n",
              "      <td>N</td>\n",
              "      <td>Withdrawn</td>\n",
              "      <td>-49.0</td>\n",
              "      <td>101.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32592</th>\n",
              "      <td>GGG</td>\n",
              "      <td>2014J</td>\n",
              "      <td>2684003</td>\n",
              "      <td>F</td>\n",
              "      <td>Yorkshire Region</td>\n",
              "      <td>HE Qualification</td>\n",
              "      <td>50-60%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>30</td>\n",
              "      <td>N</td>\n",
              "      <td>Distinction</td>\n",
              "      <td>-28.0</td>\n",
              "      <td>10000.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>32593 rows × 14 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cb358456-0374-47aa-af82-771f2683e976')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-cb358456-0374-47aa-af82-771f2683e976 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-cb358456-0374-47aa-af82-771f2683e976');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ],
      "source": [
        "# fill the missing values in date_unregistration with 0\n",
        "student_filled = student.fillna(10000)\n",
        "student_filled"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "f083d206",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "f083d206",
        "outputId": "6beebc6f-e657-41ec-d031-ecce7e1ec691"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  code_module code_presentation  id_student gender                region  \\\n",
              "0         AAA             2013J       11391      M   East Anglian Region   \n",
              "1         AAA             2013J       28400      F              Scotland   \n",
              "2         AAA             2013J       30268      F  North Western Region   \n",
              "3         AAA             2013J       31604      F     South East Region   \n",
              "4         AAA             2013J       32885      F  West Midlands Region   \n",
              "\n",
              "       highest_education imd_band age_band  num_of_prev_attempts  \\\n",
              "0       HE Qualification  90-100%     55<=                     0   \n",
              "1       HE Qualification   20-30%    35-55                     0   \n",
              "2  A Level or Equivalent   30-40%    35-55                     0   \n",
              "3  A Level or Equivalent   50-60%    35-55                     0   \n",
              "4     Lower Than A Level   50-60%     0-35                     0   \n",
              "\n",
              "   studied_credits disability final_result  date_registration  \\\n",
              "0              240          N         Pass             -159.0   \n",
              "1               60          N         Pass              -53.0   \n",
              "2               60          Y    Withdrawn              -92.0   \n",
              "3               60          N         Pass              -52.0   \n",
              "4               60          N         Pass             -176.0   \n",
              "\n",
              "   date_unregistration  finished  \n",
              "0              10000.0       1.0  \n",
              "1              10000.0       1.0  \n",
              "2                 12.0       0.0  \n",
              "3              10000.0       1.0  \n",
              "4              10000.0       1.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-164aadd6-1616-4fa5-8531-d1ba576caa72\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>code_module</th>\n",
              "      <th>code_presentation</th>\n",
              "      <th>id_student</th>\n",
              "      <th>gender</th>\n",
              "      <th>region</th>\n",
              "      <th>highest_education</th>\n",
              "      <th>imd_band</th>\n",
              "      <th>age_band</th>\n",
              "      <th>num_of_prev_attempts</th>\n",
              "      <th>studied_credits</th>\n",
              "      <th>disability</th>\n",
              "      <th>final_result</th>\n",
              "      <th>date_registration</th>\n",
              "      <th>date_unregistration</th>\n",
              "      <th>finished</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>11391</td>\n",
              "      <td>M</td>\n",
              "      <td>East Anglian Region</td>\n",
              "      <td>HE Qualification</td>\n",
              "      <td>90-100%</td>\n",
              "      <td>55&lt;=</td>\n",
              "      <td>0</td>\n",
              "      <td>240</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-159.0</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>28400</td>\n",
              "      <td>F</td>\n",
              "      <td>Scotland</td>\n",
              "      <td>HE Qualification</td>\n",
              "      <td>20-30%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-53.0</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>30268</td>\n",
              "      <td>F</td>\n",
              "      <td>North Western Region</td>\n",
              "      <td>A Level or Equivalent</td>\n",
              "      <td>30-40%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>Y</td>\n",
              "      <td>Withdrawn</td>\n",
              "      <td>-92.0</td>\n",
              "      <td>12.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>31604</td>\n",
              "      <td>F</td>\n",
              "      <td>South East Region</td>\n",
              "      <td>A Level or Equivalent</td>\n",
              "      <td>50-60%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-52.0</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>32885</td>\n",
              "      <td>F</td>\n",
              "      <td>West Midlands Region</td>\n",
              "      <td>Lower Than A Level</td>\n",
              "      <td>50-60%</td>\n",
              "      <td>0-35</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-176.0</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-164aadd6-1616-4fa5-8531-d1ba576caa72')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-164aadd6-1616-4fa5-8531-d1ba576caa72 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-164aadd6-1616-4fa5-8531-d1ba576caa72');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ],
      "source": [
        "# create a new column finished from date_unregistration to represent whether the student finished the course\n",
        "d = {10000: 1}\n",
        "student_filled['finished'] = student_filled['date_unregistration'].map(d)\n",
        "student_filled = student_filled.fillna(0)\n",
        "student_filled.head()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# check for the distribution of values for num_of_prev_attempts\n",
        "student_filled['num_of_prev_attempts'].value_counts(normalize=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1mTUoWcsUFvb",
        "outputId": "dfeee846-7b60-4aba-9c8d-ca3d92bed7cf"
      },
      "id": "1mTUoWcsUFvb",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    0.871997\n",
              "1    0.101218\n",
              "2    0.020710\n",
              "3    0.004357\n",
              "4    0.001197\n",
              "5    0.000399\n",
              "6    0.000123\n",
              "Name: num_of_prev_attempts, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# show the unique values of final_result\n",
        "student_filled['final_result'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jolNs7ywUtbJ",
        "outputId": "34e48125-0699-4d9d-dec3-0f00c42749ce"
      },
      "id": "jolNs7ywUtbJ",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Pass', 'Withdrawn', 'Fail', 'Distinction'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# check for the distribution of values for final_result\n",
        "student_filled['final_result'].value_counts(normalize=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BGgWmq6ZU7vY",
        "outputId": "8ccc94b4-f99d-4df8-d6d7-2c88c03b6286"
      },
      "id": "BGgWmq6ZU7vY",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Pass           0.379253\n",
              "Withdrawn      0.311601\n",
              "Fail           0.216365\n",
              "Distinction    0.092781\n",
              "Name: final_result, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# create a new column final_grade to represent each student's final result numerically\n",
        "r = {'Pass': 1, 'Withdrawn': 0, 'Fail': -1, 'Distinction': 2}\n",
        "student_mapped = student_filled.copy()\n",
        "student_mapped['final_grade'] = student_filled['final_result'].map(r)\n",
        "student_mapped.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 250
        },
        "id": "CgAaDiTBVlkC",
        "outputId": "8331298e-4ad5-4e29-9e46-6c92833484ff"
      },
      "id": "CgAaDiTBVlkC",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  code_module code_presentation  id_student gender                region  \\\n",
              "0         AAA             2013J       11391      M   East Anglian Region   \n",
              "1         AAA             2013J       28400      F              Scotland   \n",
              "2         AAA             2013J       30268      F  North Western Region   \n",
              "3         AAA             2013J       31604      F     South East Region   \n",
              "4         AAA             2013J       32885      F  West Midlands Region   \n",
              "\n",
              "       highest_education imd_band age_band  num_of_prev_attempts  \\\n",
              "0       HE Qualification  90-100%     55<=                     0   \n",
              "1       HE Qualification   20-30%    35-55                     0   \n",
              "2  A Level or Equivalent   30-40%    35-55                     0   \n",
              "3  A Level or Equivalent   50-60%    35-55                     0   \n",
              "4     Lower Than A Level   50-60%     0-35                     0   \n",
              "\n",
              "   studied_credits disability final_result  date_registration  \\\n",
              "0              240          N         Pass             -159.0   \n",
              "1               60          N         Pass              -53.0   \n",
              "2               60          Y    Withdrawn              -92.0   \n",
              "3               60          N         Pass              -52.0   \n",
              "4               60          N         Pass             -176.0   \n",
              "\n",
              "   date_unregistration  finished  final_grade  \n",
              "0              10000.0       1.0            1  \n",
              "1              10000.0       1.0            1  \n",
              "2                 12.0       0.0            0  \n",
              "3              10000.0       1.0            1  \n",
              "4              10000.0       1.0            1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-693d2f78-aece-46b2-819d-7a6f7e121378\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>code_module</th>\n",
              "      <th>code_presentation</th>\n",
              "      <th>id_student</th>\n",
              "      <th>gender</th>\n",
              "      <th>region</th>\n",
              "      <th>highest_education</th>\n",
              "      <th>imd_band</th>\n",
              "      <th>age_band</th>\n",
              "      <th>num_of_prev_attempts</th>\n",
              "      <th>studied_credits</th>\n",
              "      <th>disability</th>\n",
              "      <th>final_result</th>\n",
              "      <th>date_registration</th>\n",
              "      <th>date_unregistration</th>\n",
              "      <th>finished</th>\n",
              "      <th>final_grade</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>11391</td>\n",
              "      <td>M</td>\n",
              "      <td>East Anglian Region</td>\n",
              "      <td>HE Qualification</td>\n",
              "      <td>90-100%</td>\n",
              "      <td>55&lt;=</td>\n",
              "      <td>0</td>\n",
              "      <td>240</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-159.0</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>28400</td>\n",
              "      <td>F</td>\n",
              "      <td>Scotland</td>\n",
              "      <td>HE Qualification</td>\n",
              "      <td>20-30%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-53.0</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>30268</td>\n",
              "      <td>F</td>\n",
              "      <td>North Western Region</td>\n",
              "      <td>A Level or Equivalent</td>\n",
              "      <td>30-40%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>Y</td>\n",
              "      <td>Withdrawn</td>\n",
              "      <td>-92.0</td>\n",
              "      <td>12.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>31604</td>\n",
              "      <td>F</td>\n",
              "      <td>South East Region</td>\n",
              "      <td>A Level or Equivalent</td>\n",
              "      <td>50-60%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-52.0</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>32885</td>\n",
              "      <td>F</td>\n",
              "      <td>West Midlands Region</td>\n",
              "      <td>Lower Than A Level</td>\n",
              "      <td>50-60%</td>\n",
              "      <td>0-35</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-176.0</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-693d2f78-aece-46b2-819d-7a6f7e121378')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-693d2f78-aece-46b2-819d-7a6f7e121378 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-693d2f78-aece-46b2-819d-7a6f7e121378');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# # show the unique values of highest_education\n",
        "student_mapped['highest_education'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZXG5o1CdaHWS",
        "outputId": "73f75c64-3c85-40ac-e1b5-b65f6dbfa77b"
      },
      "id": "ZXG5o1CdaHWS",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['HE Qualification', 'A Level or Equivalent', 'Lower Than A Level',\n",
              "       'Post Graduate Qualification', 'No Formal quals'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# create a new column highestEducation to represent each student's highest education numerically\n",
        "e = {'HE Qualification': 3, 'A Level or Equivalent': 2, 'Lower Than A Level': 1, 'Post Graduate Qualification': 4, 'No Formal quals': 0}\n",
        "student_mapped['highestEducation'] = student_filled['highest_education'].map(e)\n",
        "student_mapped.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 409
        },
        "id": "g8IEvLyUaNJd",
        "outputId": "7ec9c892-cc66-4ef1-9970-03511b2b01ea"
      },
      "id": "g8IEvLyUaNJd",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  code_module code_presentation  id_student gender                region  \\\n",
              "0         AAA             2013J       11391      M   East Anglian Region   \n",
              "1         AAA             2013J       28400      F              Scotland   \n",
              "2         AAA             2013J       30268      F  North Western Region   \n",
              "3         AAA             2013J       31604      F     South East Region   \n",
              "4         AAA             2013J       32885      F  West Midlands Region   \n",
              "\n",
              "       highest_education imd_band age_band  num_of_prev_attempts  \\\n",
              "0       HE Qualification  90-100%     55<=                     0   \n",
              "1       HE Qualification   20-30%    35-55                     0   \n",
              "2  A Level or Equivalent   30-40%    35-55                     0   \n",
              "3  A Level or Equivalent   50-60%    35-55                     0   \n",
              "4     Lower Than A Level   50-60%     0-35                     0   \n",
              "\n",
              "   studied_credits disability final_result  date_registration  \\\n",
              "0              240          N         Pass             -159.0   \n",
              "1               60          N         Pass              -53.0   \n",
              "2               60          Y    Withdrawn              -92.0   \n",
              "3               60          N         Pass              -52.0   \n",
              "4               60          N         Pass             -176.0   \n",
              "\n",
              "   date_unregistration  finished  final_grade  highestEducation  \n",
              "0              10000.0       1.0            1                 3  \n",
              "1              10000.0       1.0            1                 3  \n",
              "2                 12.0       0.0            0                 2  \n",
              "3              10000.0       1.0            1                 2  \n",
              "4              10000.0       1.0            1                 1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e3985581-5b21-47a2-8ed1-8fb689d67fed\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>code_module</th>\n",
              "      <th>code_presentation</th>\n",
              "      <th>id_student</th>\n",
              "      <th>gender</th>\n",
              "      <th>region</th>\n",
              "      <th>highest_education</th>\n",
              "      <th>imd_band</th>\n",
              "      <th>age_band</th>\n",
              "      <th>num_of_prev_attempts</th>\n",
              "      <th>studied_credits</th>\n",
              "      <th>disability</th>\n",
              "      <th>final_result</th>\n",
              "      <th>date_registration</th>\n",
              "      <th>date_unregistration</th>\n",
              "      <th>finished</th>\n",
              "      <th>final_grade</th>\n",
              "      <th>highestEducation</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>11391</td>\n",
              "      <td>M</td>\n",
              "      <td>East Anglian Region</td>\n",
              "      <td>HE Qualification</td>\n",
              "      <td>90-100%</td>\n",
              "      <td>55&lt;=</td>\n",
              "      <td>0</td>\n",
              "      <td>240</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-159.0</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>28400</td>\n",
              "      <td>F</td>\n",
              "      <td>Scotland</td>\n",
              "      <td>HE Qualification</td>\n",
              "      <td>20-30%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-53.0</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>30268</td>\n",
              "      <td>F</td>\n",
              "      <td>North Western Region</td>\n",
              "      <td>A Level or Equivalent</td>\n",
              "      <td>30-40%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>Y</td>\n",
              "      <td>Withdrawn</td>\n",
              "      <td>-92.0</td>\n",
              "      <td>12.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>31604</td>\n",
              "      <td>F</td>\n",
              "      <td>South East Region</td>\n",
              "      <td>A Level or Equivalent</td>\n",
              "      <td>50-60%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-52.0</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>32885</td>\n",
              "      <td>F</td>\n",
              "      <td>West Midlands Region</td>\n",
              "      <td>Lower Than A Level</td>\n",
              "      <td>50-60%</td>\n",
              "      <td>0-35</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-176.0</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e3985581-5b21-47a2-8ed1-8fb689d67fed')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e3985581-5b21-47a2-8ed1-8fb689d67fed button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e3985581-5b21-47a2-8ed1-8fb689d67fed');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# create a new column Gender to represent each student's gender numerically\n",
        "s = {'M': 0, 'F': 1}\n",
        "student_mapped['Gender'] = student_mapped['gender'].map(s)\n",
        "student_mapped.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 409
        },
        "id": "QoMwEE_zafyf",
        "outputId": "3069b593-7661-492a-8395-3da5628652d7"
      },
      "id": "QoMwEE_zafyf",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  code_module code_presentation  id_student gender                region  \\\n",
              "0         AAA             2013J       11391      M   East Anglian Region   \n",
              "1         AAA             2013J       28400      F              Scotland   \n",
              "2         AAA             2013J       30268      F  North Western Region   \n",
              "3         AAA             2013J       31604      F     South East Region   \n",
              "4         AAA             2013J       32885      F  West Midlands Region   \n",
              "\n",
              "       highest_education imd_band age_band  num_of_prev_attempts  \\\n",
              "0       HE Qualification  90-100%     55<=                     0   \n",
              "1       HE Qualification   20-30%    35-55                     0   \n",
              "2  A Level or Equivalent   30-40%    35-55                     0   \n",
              "3  A Level or Equivalent   50-60%    35-55                     0   \n",
              "4     Lower Than A Level   50-60%     0-35                     0   \n",
              "\n",
              "   studied_credits disability final_result  date_registration  \\\n",
              "0              240          N         Pass             -159.0   \n",
              "1               60          N         Pass              -53.0   \n",
              "2               60          Y    Withdrawn              -92.0   \n",
              "3               60          N         Pass              -52.0   \n",
              "4               60          N         Pass             -176.0   \n",
              "\n",
              "   date_unregistration  finished  final_grade  highestEducation  Gender  \n",
              "0              10000.0       1.0            1                 3       0  \n",
              "1              10000.0       1.0            1                 3       1  \n",
              "2                 12.0       0.0            0                 2       1  \n",
              "3              10000.0       1.0            1                 2       1  \n",
              "4              10000.0       1.0            1                 1       1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4d95fae7-5c5a-4100-a2bb-c7972134879c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>code_module</th>\n",
              "      <th>code_presentation</th>\n",
              "      <th>id_student</th>\n",
              "      <th>gender</th>\n",
              "      <th>region</th>\n",
              "      <th>highest_education</th>\n",
              "      <th>imd_band</th>\n",
              "      <th>age_band</th>\n",
              "      <th>num_of_prev_attempts</th>\n",
              "      <th>studied_credits</th>\n",
              "      <th>disability</th>\n",
              "      <th>final_result</th>\n",
              "      <th>date_registration</th>\n",
              "      <th>date_unregistration</th>\n",
              "      <th>finished</th>\n",
              "      <th>final_grade</th>\n",
              "      <th>highestEducation</th>\n",
              "      <th>Gender</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>11391</td>\n",
              "      <td>M</td>\n",
              "      <td>East Anglian Region</td>\n",
              "      <td>HE Qualification</td>\n",
              "      <td>90-100%</td>\n",
              "      <td>55&lt;=</td>\n",
              "      <td>0</td>\n",
              "      <td>240</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-159.0</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>28400</td>\n",
              "      <td>F</td>\n",
              "      <td>Scotland</td>\n",
              "      <td>HE Qualification</td>\n",
              "      <td>20-30%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-53.0</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>30268</td>\n",
              "      <td>F</td>\n",
              "      <td>North Western Region</td>\n",
              "      <td>A Level or Equivalent</td>\n",
              "      <td>30-40%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>Y</td>\n",
              "      <td>Withdrawn</td>\n",
              "      <td>-92.0</td>\n",
              "      <td>12.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>31604</td>\n",
              "      <td>F</td>\n",
              "      <td>South East Region</td>\n",
              "      <td>A Level or Equivalent</td>\n",
              "      <td>50-60%</td>\n",
              "      <td>35-55</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-52.0</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>AAA</td>\n",
              "      <td>2013J</td>\n",
              "      <td>32885</td>\n",
              "      <td>F</td>\n",
              "      <td>West Midlands Region</td>\n",
              "      <td>Lower Than A Level</td>\n",
              "      <td>50-60%</td>\n",
              "      <td>0-35</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>N</td>\n",
              "      <td>Pass</td>\n",
              "      <td>-176.0</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4d95fae7-5c5a-4100-a2bb-c7972134879c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4d95fae7-5c5a-4100-a2bb-c7972134879c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4d95fae7-5c5a-4100-a2bb-c7972134879c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "50da0fe1",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "50da0fe1",
        "outputId": "09c0f8a5-17a3-441a-d564-eb459b92522b"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             num_of_prev_attempts  finished\n",
              "code_module                                \n",
              "AAA                      0.054813  0.831551\n",
              "BBB                      0.211025  0.699456\n",
              "CCC                      0.053000  0.560893\n",
              "DDD                      0.248087  0.643654\n",
              "EEE                      0.054192  0.755283\n",
              "FFF                      0.202654  0.693378\n",
              "GGG                      0.034333  0.885951"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ffd68267-8689-4773-b347-acadbc2bcfca\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>num_of_prev_attempts</th>\n",
              "      <th>finished</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>code_module</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>AAA</th>\n",
              "      <td>0.054813</td>\n",
              "      <td>0.831551</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>BBB</th>\n",
              "      <td>0.211025</td>\n",
              "      <td>0.699456</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CCC</th>\n",
              "      <td>0.053000</td>\n",
              "      <td>0.560893</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DDD</th>\n",
              "      <td>0.248087</td>\n",
              "      <td>0.643654</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>EEE</th>\n",
              "      <td>0.054192</td>\n",
              "      <td>0.755283</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>FFF</th>\n",
              "      <td>0.202654</td>\n",
              "      <td>0.693378</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>GGG</th>\n",
              "      <td>0.034333</td>\n",
              "      <td>0.885951</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ffd68267-8689-4773-b347-acadbc2bcfca')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ffd68267-8689-4773-b347-acadbc2bcfca button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ffd68267-8689-4773-b347-acadbc2bcfca');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ],
      "source": [
        "# create a dataset with rows being the seven course names while the columns are the mean of the number of student previous attempts on the selected course and whether the student finished the course\n",
        "course = student_filled.groupby('code_module')[['num_of_prev_attempts', 'finished']].mean()\n",
        "course"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# create a dataset with rows being the seven course names while the columns are the mean of the number of student previous attempts on the selected course and the student's final grade for the course\n",
        "course2 = student_mapped.groupby('code_module')[['num_of_prev_attempts', 'final_grade']].mean()\n",
        "course2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "AMlhW65kVC2S",
        "outputId": "5fd93a16-056d-4b38-ee12-c0b737479e95"
      },
      "id": "AMlhW65kVC2S",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             num_of_prev_attempts  final_grade\n",
              "code_module                                   \n",
              "AAA                      0.054813     0.647059\n",
              "BBB                      0.211025     0.336831\n",
              "CCC                      0.053000     0.314614\n",
              "DDD                      0.248087     0.252073\n",
              "EEE                      0.054192     0.492161\n",
              "FFF                      0.202654     0.335867\n",
              "GGG                      0.034333     0.466456"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-89062129-022a-4e8d-826b-50a368d7534c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>num_of_prev_attempts</th>\n",
              "      <th>final_grade</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>code_module</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>AAA</th>\n",
              "      <td>0.054813</td>\n",
              "      <td>0.647059</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>BBB</th>\n",
              "      <td>0.211025</td>\n",
              "      <td>0.336831</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CCC</th>\n",
              "      <td>0.053000</td>\n",
              "      <td>0.314614</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DDD</th>\n",
              "      <td>0.248087</td>\n",
              "      <td>0.252073</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>EEE</th>\n",
              "      <td>0.054192</td>\n",
              "      <td>0.492161</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>FFF</th>\n",
              "      <td>0.202654</td>\n",
              "      <td>0.335867</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>GGG</th>\n",
              "      <td>0.034333</td>\n",
              "      <td>0.466456</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-89062129-022a-4e8d-826b-50a368d7534c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-89062129-022a-4e8d-826b-50a368d7534c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-89062129-022a-4e8d-826b-50a368d7534c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "course3 = student_mapped.groupby('code_module')[['num_of_prev_attempts', 'final_grade', 'finished', 'Gender', 'highestEducation']].mean()\n",
        "# sort the dataset based on students' highest education\n",
        "course3.sort_values(by='highestEducation', ascending=False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "xGg9fSCufy60",
        "outputId": "f69236bd-ebdb-4bed-c838-7fed5dd5fdf0"
      },
      "id": "xGg9fSCufy60",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             num_of_prev_attempts  final_grade  finished    Gender  \\\n",
              "code_module                                                          \n",
              "AAA                      0.054813     0.647059  0.831551  0.419786   \n",
              "CCC                      0.053000     0.314614  0.560893  0.248309   \n",
              "EEE                      0.054192     0.492161  0.755283  0.114860   \n",
              "DDD                      0.248087     0.252073  0.643654  0.401467   \n",
              "FFF                      0.202654     0.335867  0.693378  0.182170   \n",
              "BBB                      0.211025     0.336831  0.699456  0.883930   \n",
              "GGG                      0.034333     0.466456  0.885951  0.806235   \n",
              "\n",
              "             highestEducation  \n",
              "code_module                    \n",
              "AAA                  2.057487  \n",
              "CCC                  1.957375  \n",
              "EEE                  1.858214  \n",
              "DDD                  1.804528  \n",
              "FFF                  1.706905  \n",
              "BBB                  1.635352  \n",
              "GGG                  1.388713  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7777650b-2334-45c2-a060-02c2ca9fa8e7\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>num_of_prev_attempts</th>\n",
              "      <th>final_grade</th>\n",
              "      <th>finished</th>\n",
              "      <th>Gender</th>\n",
              "      <th>highestEducation</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>code_module</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>AAA</th>\n",
              "      <td>0.054813</td>\n",
              "      <td>0.647059</td>\n",
              "      <td>0.831551</td>\n",
              "      <td>0.419786</td>\n",
              "      <td>2.057487</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CCC</th>\n",
              "      <td>0.053000</td>\n",
              "      <td>0.314614</td>\n",
              "      <td>0.560893</td>\n",
              "      <td>0.248309</td>\n",
              "      <td>1.957375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>EEE</th>\n",
              "      <td>0.054192</td>\n",
              "      <td>0.492161</td>\n",
              "      <td>0.755283</td>\n",
              "      <td>0.114860</td>\n",
              "      <td>1.858214</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DDD</th>\n",
              "      <td>0.248087</td>\n",
              "      <td>0.252073</td>\n",
              "      <td>0.643654</td>\n",
              "      <td>0.401467</td>\n",
              "      <td>1.804528</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>FFF</th>\n",
              "      <td>0.202654</td>\n",
              "      <td>0.335867</td>\n",
              "      <td>0.693378</td>\n",
              "      <td>0.182170</td>\n",
              "      <td>1.706905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>BBB</th>\n",
              "      <td>0.211025</td>\n",
              "      <td>0.336831</td>\n",
              "      <td>0.699456</td>\n",
              "      <td>0.883930</td>\n",
              "      <td>1.635352</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>GGG</th>\n",
              "      <td>0.034333</td>\n",
              "      <td>0.466456</td>\n",
              "      <td>0.885951</td>\n",
              "      <td>0.806235</td>\n",
              "      <td>1.388713</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7777650b-2334-45c2-a060-02c2ca9fa8e7')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7777650b-2334-45c2-a060-02c2ca9fa8e7 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7777650b-2334-45c2-a060-02c2ca9fa8e7');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 3. Content-Based Recommender"
      ],
      "metadata": {
        "id": "qrbPuRlUROqe"
      },
      "id": "qrbPuRlUROqe"
    },
    {
      "cell_type": "markdown",
      "source": [
        "**3.1. Use the nearest neighbor method measured by euclidean distance**"
      ],
      "metadata": {
        "id": "Y8rqD48tRd6H"
      },
      "id": "Y8rqD48tRd6H"
    },
    {
      "cell_type": "markdown",
      "source": [
        "1. RS based on **num_of_prev_attempts** and **finished**"
      ],
      "metadata": {
        "id": "_gTub8QRXrKF"
      },
      "id": "_gTub8QRXrKF"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "c1828f8f",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 283
        },
        "id": "c1828f8f",
        "outputId": "c8024463-6304-4091-a31a-e28f243f7c73"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "import matplotlib.pyplot as plt\n",
        "# Plot the basic scatter plot\n",
        "plt.scatter(course.num_of_prev_attempts, course.finished)\n",
        "\n",
        "# Add lables to each point\n",
        "for i, index in enumerate (course.index):\n",
        "    plt.text(course.num_of_prev_attempts[i]+0.01, course.finished[i]+0.01, index)\n",
        "    \n",
        "# Adjust the axis limit and label\n",
        "plt.xlim (0, 0.3)\n",
        "plt.ylim (0.5, 1)\n",
        "plt.xlabel(\"previous attempts\")\n",
        "plt.ylabel(\"finished\");"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "a3aabc50",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "a3aabc50",
        "outputId": "7f2ad880-34b1-4f54-b179-7068c22c9e0e"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             num_of_prev_attempts  finished  distance\n",
              "code_module                                          \n",
              "AAA                      0.054813  0.831551  0.000000\n",
              "GGG                      0.034333  0.885951  0.058128\n",
              "EEE                      0.054192  0.755283  0.076270\n",
              "FFF                      0.202654  0.693378  0.202358\n",
              "BBB                      0.211025  0.699456  0.204576\n",
              "DDD                      0.248087  0.643654  0.269555\n",
              "CCC                      0.053000  0.560893  0.270664"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f1c61fb6-3274-4ca8-8301-b4d80aaef607\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>num_of_prev_attempts</th>\n",
              "      <th>finished</th>\n",
              "      <th>distance</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>code_module</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>AAA</th>\n",
              "      <td>0.054813</td>\n",
              "      <td>0.831551</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>GGG</th>\n",
              "      <td>0.034333</td>\n",
              "      <td>0.885951</td>\n",
              "      <td>0.058128</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>EEE</th>\n",
              "      <td>0.054192</td>\n",
              "      <td>0.755283</td>\n",
              "      <td>0.076270</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>FFF</th>\n",
              "      <td>0.202654</td>\n",
              "      <td>0.693378</td>\n",
              "      <td>0.202358</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>BBB</th>\n",
              "      <td>0.211025</td>\n",
              "      <td>0.699456</td>\n",
              "      <td>0.204576</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DDD</th>\n",
              "      <td>0.248087</td>\n",
              "      <td>0.643654</td>\n",
              "      <td>0.269555</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CCC</th>\n",
              "      <td>0.053000</td>\n",
              "      <td>0.560893</td>\n",
              "      <td>0.270664</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f1c61fb6-3274-4ca8-8301-b4d80aaef607')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f1c61fb6-3274-4ca8-8301-b4d80aaef607 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f1c61fb6-3274-4ca8-8301-b4d80aaef607');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ],
      "source": [
        "# Create a new column called distance. And assign 0 to all rows temporarily.\n",
        "course_distance = course.copy()\n",
        "course_distance['distance'] = 0\n",
        "\n",
        "# Pick AAA to start.\n",
        "item = course_distance.loc['AAA',]\n",
        "\n",
        "# Loop around the data frame index; Obtain the target row; Calculate the distance\n",
        "# Assign to d; And assign to the corresponding cell.\n",
        "for i in course_distance.index:\n",
        "    target = course_distance.loc[i,]\n",
        "    d = np.linalg.norm(item - target)\n",
        "    course_distance.loc[i, 'distance'] = d\n",
        "\n",
        "# Sort the result by distance\n",
        "course_distance.sort_values('distance', ascending=True)"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Based on the distance, AAA is mostly similar to GGG considering both num_of_prev_attempts and finished while CCC is the least similar. As a result, based on the current item AAA, we would recommend GGG."
      ],
      "metadata": {
        "id": "qSP9eeW8PSou"
      },
      "id": "qSP9eeW8PSou"
    },
    {
      "cell_type": "markdown",
      "source": [
        "2. RS based on **num_of_prev_attempts** and **final_grade**"
      ],
      "metadata": {
        "id": "ZlDrEIfAXyAE"
      },
      "id": "ZlDrEIfAXyAE"
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "# Plot the basic scatter plot\n",
        "plt.scatter(course2.num_of_prev_attempts, course2.final_grade)\n",
        "\n",
        "# Add lables to each point\n",
        "for i, index in enumerate (course.index):\n",
        "    plt.text(course2.num_of_prev_attempts[i]+0.01, course2.final_grade[i]+0.01, index)\n",
        "    \n",
        "# Adjust the axis limit and label\n",
        "plt.xlim (0, 0.3)\n",
        "plt.ylim (0.2, 0.7)\n",
        "plt.xlabel(\"previous attempts\")\n",
        "plt.ylabel(\"final grade\");"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 283
        },
        "id": "1kR9sURtWPwa",
        "outputId": "d0d53a48-b2af-47bd-a9bd-78e90e9c083e"
      },
      "id": "1kR9sURtWPwa",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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6SmAwsJCxo0bx7Jlyw7az6233sqUKVOYO3duM/Ss9dHpKRFJSqeffjoffvghu3btOmjdyJEjee6552rcrq510ngKDRFJSu+88w4VFRUcffTRB6174YUX6NmzZ43b1bVOGk+np0QkaVSOabRp04a//vWv3H///aSlpQFUjWm4O+3ateOee+6p2q5yTMPd6dChwwHrpGmZuye6DQ2Sn5/vK1asSHQzRKQORavKmFVcyrY95XTNzGDysF6MystKdLNaNTNb6e75jd2PTk+lmA8++IDRo0fTs2dPBgwYwIgRI1i/fj3r169nxIgR5OTk0L9/fy699FJ27NgBwGuvvcaQIUPo1asXeXl5XHPNNezbty/BPZFkVLSqjEG3PE321EcZdMvTFK0qq7HOtMVrKNtTjgNle8qZtnhNjXWl5dHpqRTi7lx44YWMHTuWBQsWAPDmm2+yY8cOrr76an7/+99z/vnnA7G7aCsHGC+55BIWLFjA6aefDsCiRYvYu3cvhx9+eGI6IkmpMgzK91cA34QBcMBRxKzi0qo6lcr3VzCruFRHGylARxop5JlnniE9PZ3x48dXlfXr1493332X008/vSowAIYOHUqfPn2YM2cOY8eOrQoMgB/96Eccc8wxzdp2SX51hUG8bXvKa9y+tnJpWRQaKeStt95iwIABocvrWycSL2wYdM3MqLFebeXSsig0RCSUsGEweVgvMtLTDijLSE9j8rBekbVNmo9CI4X07t2blStXhi6vb51IvLBhMCovi5svOpmszAwMyMrM4OaLTtZ4RorQJbcpxN057bTT+OlPf8q4ceMAWL16NZ988glXXXUVd9xxB+eddx4Azz33HEcddRSdO3dm4MCBPPTQQ5x66qkALF68mEGDBmlcQw6iS2lbrqa65FahkWK2bdvGddddx8qVKznssMPo0aMHf/jDH6ioqOC6667jvffeIz09nb59+3LHHXdwzDHH8PLLLzNlyhR27txJmzZtGDJkCLNnz9bVUyIpRKEhIiKhNVVo6D6NJKRTACKSrBQaSSbsDVQiIomgq6eSTNgbqEREEkGhkWR0N62IJDOFRpLR3bQikswUGklGd9OKSDKLNDTMbLiZlZrZBjObWsP68Wa2xsxKzOwFMzspyva0BLqbVkSSWWT3aZhZGrAe+CGwFXgdGOPu6+LqfNvdPw3ejwR+7u7D69qv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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a new column called distance. And assign 0 to all rows temporarily.\n",
        "course2_distance = course2.copy()\n",
        "course2_distance['distance'] = 0\n",
        "\n",
        "# Pick AAA to start.\n",
        "item = course2_distance.loc['AAA',]\n",
        "\n",
        "# Loop around the data frame index; Obtain the target row; Calculate the distance\n",
        "# Assign to d; And assign to the corresponding cell.\n",
        "for i in course2_distance.index:\n",
        "    target = course2_distance.loc[i,]\n",
        "    d = np.linalg.norm(item - target)\n",
        "    course2_distance.loc[i, 'distance'] = d\n",
        "\n",
        "# Sort the result by distance\n",
        "course2_distance.sort_values('distance', ascending=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "kmkAy3jiW0tl",
        "outputId": "d4fb14f3-1782-43a5-f400-9ea9f422a5d6"
      },
      "id": "kmkAy3jiW0tl",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             num_of_prev_attempts  final_grade  distance\n",
              "code_module                                             \n",
              "AAA                      0.054813     0.647059  0.000000\n",
              "EEE                      0.054192     0.492161  0.154899\n",
              "GGG                      0.034333     0.466456  0.181760\n",
              "CCC                      0.053000     0.314614  0.332449\n",
              "FFF                      0.202654     0.335867  0.344525\n",
              "BBB                      0.211025     0.336831  0.347338\n",
              "DDD                      0.248087     0.252073  0.439737"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e6070400-8410-4a27-bf20-7c80de810436\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>num_of_prev_attempts</th>\n",
              "      <th>final_grade</th>\n",
              "      <th>distance</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>code_module</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>AAA</th>\n",
              "      <td>0.054813</td>\n",
              "      <td>0.647059</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>EEE</th>\n",
              "      <td>0.054192</td>\n",
              "      <td>0.492161</td>\n",
              "      <td>0.154899</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>GGG</th>\n",
              "      <td>0.034333</td>\n",
              "      <td>0.466456</td>\n",
              "      <td>0.181760</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CCC</th>\n",
              "      <td>0.053000</td>\n",
              "      <td>0.314614</td>\n",
              "      <td>0.332449</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>FFF</th>\n",
              "      <td>0.202654</td>\n",
              "      <td>0.335867</td>\n",
              "      <td>0.344525</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>BBB</th>\n",
              "      <td>0.211025</td>\n",
              "      <td>0.336831</td>\n",
              "      <td>0.347338</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DDD</th>\n",
              "      <td>0.248087</td>\n",
              "      <td>0.252073</td>\n",
              "      <td>0.439737</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e6070400-8410-4a27-bf20-7c80de810436')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e6070400-8410-4a27-bf20-7c80de810436 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e6070400-8410-4a27-bf20-7c80de810436');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Based on the distance, AAA is mostly similar to EEE considering both num_of_prev_attempts and final_grade while DDD is the least similar. As a result, based on the current item AAA, we would recommend EEE."
      ],
      "metadata": {
        "id": "LWtoalDFXCAT"
      },
      "id": "LWtoalDFXCAT"
    },
    {
      "cell_type": "markdown",
      "source": [
        "**3.2 Use the cosine similarity to measure the distance**"
      ],
      "metadata": {
        "id": "02d8b-drPwvE"
      },
      "id": "02d8b-drPwvE"
    },
    {
      "cell_type": "markdown",
      "source": [
        "1. RS based on **num_of_prev_attempts** and **finished**"
      ],
      "metadata": {
        "id": "7nXkyHOIYSk9"
      },
      "id": "7nXkyHOIYSk9"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "baa7b321",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "baa7b321",
        "outputId": "80a60ea5-3438-4b83-8785-07c649a75a0a"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1.        , 0.97430231, 0.99959702, 0.95472384, 0.99998314,\n",
              "        0.97621733, 0.99963315],\n",
              "       [0.97430231, 1.        , 0.98030362, 0.99719837, 0.97559387,\n",
              "        0.99996246, 0.96784427],\n",
              "       [0.99959702, 0.98030362, 1.        , 0.96278394, 0.999745  ,\n",
              "        0.98197799, 0.99846148],\n",
              "       [0.95472384, 0.99719837, 0.96278394, 1.        , 0.95643527,\n",
              "        0.99651283, 0.94631615],\n",
              "       [0.99998314, 0.97559387, 0.999745  , 0.95643527, 1.        ,\n",
              "        0.97745978, 0.99945902],\n",
              "       [0.97621733, 0.99996246, 0.98197799, 0.99651283, 0.97745978,\n",
              "        1.        , 0.96998745],\n",
              "       [0.99963315, 0.96784427, 0.99846148, 0.94631615, 0.99945902,\n",
              "        0.96998745, 1.        ]])"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ],
      "source": [
        "from sklearn.metrics.pairwise import cosine_similarity\n",
        "\n",
        "cosine_sim = cosine_similarity(course)\n",
        "cosine_sim"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "24abfeb2",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "24abfeb2",
        "outputId": "01ab2946-0185-49d1-fb70-2459e533bbdf"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "code_module\n",
              "AAA    0\n",
              "BBB    1\n",
              "CCC    2\n",
              "DDD    3\n",
              "EEE    4\n",
              "FFF    5\n",
              "GGG    6\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ],
      "source": [
        "# Create a index for the module\n",
        "module_indices = pd.Series(range(len(course.index)), index = course.index)\n",
        "\n",
        "module_indices"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "2ac9d6b1",
      "metadata": {
        "id": "2ac9d6b1"
      },
      "outputs": [],
      "source": [
        "def get_recommendations(name, cosine_sim, matrix_indices):\n",
        "    # Get the index of the course\n",
        "    idx = matrix_indices[name]\n",
        "\n",
        "    # Get the pairwsie similarity scores of all courses with that course\n",
        "    sim_scores = list(enumerate(cosine_sim[idx]))\n",
        "\n",
        "    # Sort the courses based on the similarity scores\n",
        "    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)\n",
        "\n",
        "    # Get the scores of the most similar courses\n",
        "    sim_scores = sim_scores[1:7]\n",
        "\n",
        "    # Get the course indices\n",
        "    rank_indices = [i[0] for i in sim_scores]\n",
        "\n",
        "    # Return the most similar courses\n",
        "    return matrix_indices.iloc[rank_indices]"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Now, we can make a quick query to find out which items are most similar to any given item."
      ],
      "metadata": {
        "id": "0GBcQgiaSI0E"
      },
      "id": "0GBcQgiaSI0E"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "4f5cd8b2",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4f5cd8b2",
        "outputId": "6aaaa33d-25f0-4ce1-8e65-467f56241607"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "code_module\n",
              "EEE    4\n",
              "GGG    6\n",
              "CCC    2\n",
              "FFF    5\n",
              "BBB    1\n",
              "DDD    3\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ],
      "source": [
        "get_recommendations(\"AAA\", cosine_sim, module_indices)"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Based on the cosine similarity measure, this time EEE is mostly similar to AAA while DDD is least similar to AAA."
      ],
      "metadata": {
        "id": "KRvVrn54QLQN"
      },
      "id": "KRvVrn54QLQN"
    },
    {
      "cell_type": "markdown",
      "source": [
        "2. RS based on **num_of_prev_attempts** and **final_grade**"
      ],
      "metadata": {
        "id": "5aaFtddMYT-D"
      },
      "id": "5aaFtddMYT-D"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "e492a74a",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "e492a74a",
        "outputId": "eca0d3d7-6df6-44db-8ea3-129d3e3118cc"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1.        , 0.88921527, 0.99660845, 0.76938407, 0.9996835 ,\n",
              "        0.89676661, 0.99993909],\n",
              "       [0.88921527, 1.        , 0.92384609, 0.97638586, 0.90044305,\n",
              "        0.99985921, 0.88411171],\n",
              "       [0.99660845, 0.92384609, 1.        , 0.81934022, 0.99836322,\n",
              "        0.9301387 , 0.9956395 ],\n",
              "       [0.76938407, 0.97638586, 0.81934022, 1.        , 0.78521075,\n",
              "        0.97262341, 0.7622868 ],\n",
              "       [0.9996835 , 0.90044305, 0.99836322, 0.78521075, 1.        ,\n",
              "        0.90761502, 0.99934494],\n",
              "       [0.89676661, 0.99985921, 0.9301387 , 0.97262341, 0.90761502,\n",
              "        1.        , 0.89182799],\n",
              "       [0.99993909, 0.88411171, 0.9956395 , 0.7622868 , 0.99934494,\n",
              "        0.89182799, 1.        ]])"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ],
      "source": [
        "cosine_sim2 = cosine_similarity(course2)\n",
        "cosine_sim2"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "get_recommendations(\"AAA\", cosine_sim2, module_indices)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ju3vEeoNXWsY",
        "outputId": "06cbe021-0668-4500-e4d7-9331a35b3d66"
      },
      "id": "ju3vEeoNXWsY",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "code_module\n",
              "GGG    6\n",
              "EEE    4\n",
              "CCC    2\n",
              "FFF    5\n",
              "BBB    1\n",
              "DDD    3\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Based on the cosine similarity measure, this time GGG is mostly similar to AAA while DDD is least similar to AAA."
      ],
      "metadata": {
        "id": "9ycuf_CMXd9T"
      },
      "id": "9ycuf_CMXd9T"
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 4. Discussion\n",
        "\n",
        "There are lots of missing data in imd_band (1111), date_registration (45), and especially in date_unregistration (22521). The variable date_unregistration is the date of student deregistered from course in days from official start. It can be negative - student deregistered before course started. NA value means that student finished course.\n",
        "Thus, we fill the missing values in date_unregistration with 0 and create a new column finished from date_unregistration to represent whether the student finished the course. We have also create a new column final_grade to represent each student's final result numerically.\n",
        "\n",
        "To make a reasonable suggestion to a learner based on the prior history, we choose to use the content-based recommender. We have use the the nearest neighbor method measured by euclidean distance and the cosine similarity to measure the distance.\n",
        "And for both method, we have tried the model based on 1. course data: num_of_prev_attempts and finished, and 2. Course 2 data: num_of_prev_attempts and final_grade.\n",
        "\n",
        "From the above results, we can see that EEE and GGG are always ranked in the top two and BBB and DDD are three times the lowest two. Thus, we would recommend courses EEE and GGG to the students and would not consider the BBB and DDD courses if the student have previous interest in courses AAA. Similarly, we can apply the model to students who are interested in other courses and see the result.\n",
        "\n",
        "To make a reasonable suggestion to a brand new learner (with or without background information), we have the course3 dataset to show the mean score of the courses based on num_of_prev_attempts, final_grade\tfinished, Gender, and highestEducation. We have ranked the courses by highestEducation for we believed this could be the most important factor for the incoming students.\n",
        "\n",
        "We do face some limitation for the suggestion for the new learners can only be assumed based on the general background information for different courses. Thus, the result might not be the most appropriate. Our recommendation system for the current students only use the data from num_of_prev_attempts, finished, and final_grade. More perspectives could taken into account in the future models."
      ],
      "metadata": {
        "id": "4eb-pdn9YJi5"
      },
      "id": "4eb-pdn9YJi5"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.4"
    },
    "colab": {
      "name": "Mini_LA_RS.ipynb",
      "provenance": []
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}